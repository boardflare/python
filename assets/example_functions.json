[
  {
    "name": "ai_ask",
    "description": "Uses AI to generate responses based on prompts and optional data ranges.",
    "code": "import requests\nimport json\n\ndef ai_ask(prompt, data=None, temperature=0.5, max_tokens=250, model='mistral-small-latest'):\n    \"\"\"\n    Uses AI to generate responses based on prompts and optional data ranges.\n\n    Args:\n        prompt (str): The question, task, or analysis to perform\n        data (list, optional): 2D list containing data from Excel range to analyze\n        temperature (float, optional): Controls response creativity (0-2). Default is 0.5\n        max_tokens (int, optional): Maximum tokens for response generation\n        model (str, optional): ID of the model to use\n        # Note: API key is hardcoded for this example, replace with secure handling in production\n\n    Returns:\n        str: The AI-generated response\n    \"\"\"\n    \n    # Using Boardflare API for demo purposes. Replace with any OpenAI compatible API endpoint.\n    # Sign up for your free Mistral API account at https://console.mistral.ai/ then replace the following:\n    \n    api_url = \"https://llm.boardflare.com\" # replace with \"https://api.mistral.ai/v1/chat/completions\"\n    api_key = \"cV4a59t1wjYGs....\" # replace with your Mistral API key\n    \n    # Construct the message incorporating both prompt and data if provided\n    message = prompt\n    if data is not None:\n        data_str = json.dumps(data, indent=2)\n        message += f\"\\n\\nData to analyze:\\n{data_str}\"\n    \n    # Prepare the API request payload\n    payload = {\n        \"messages\": [{\"role\": \"user\", \"content\": message}],\n        \"temperature\": temperature,\n        \"model\": model,\n        \"max_tokens\": max_tokens\n    }\n    \n    headers = {\n        \"Authorization\": f\"Bearer {api_key}\",\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    \n    # Make the API request\n    response = requests.post(api_url, headers=headers, json=payload)\n    response.raise_for_status()\n    \n    # Extract and return the response content\n    response_data = response.json()\n    content = response_data[\"choices\"][0][\"message\"][\"content\"]\n\n    return content",
    "test_cases": [
      {
        "id": "test_basic_question",
        "description": "Test: What is the tallest mountain in the world?",
        "arguments": {
          "prompt": "What is the tallest mountain in the world?"
        },
        "expected_contains_any": [
          "Everest"
        ]
      },
      {
        "id": "test_with_data",
        "description": "Test with additional data parameter",
        "arguments": {
          "prompt": "Summarize this data in one sentence",
          "data": [
            [
              "Name",
              "Value"
            ],
            [
              "Item1",
              10
            ],
            [
              "Item2",
              20
            ]
          ]
        }
      },
      {
        "id": "test_parameters",
        "description": "Test that all optional parameters work correctly",
        "arguments": {
          "prompt": "Write a very short test response",
          "temperature": 0.8,
          "max_tokens": 50,
          "model": "mistral-small-latest"
        }
      },
      {
        "id": "test_different_models_default",
        "description": "Test that different models can be used (default)",
        "arguments": {
          "prompt": "Write a one-sentence test response"
        }
      },
      {
        "id": "test_different_models_specified",
        "description": "Test that different models can be used (specified)",
        "arguments": {
          "prompt": "Write a one-sentence test response",
          "model": "mistral-small-latest"
        }
      },
      {
        "id": "test_with_complex_data",
        "description": "Test with more complex data structure",
        "arguments": {
          "prompt": "Describe the quarterly performance trends in one paragraph",
          "data": [
            [
              "Product",
              "Q1",
              "Q2",
              "Q3",
              "Q4"
            ],
            [
              "Widgets",
              100,
              150,
              200,
              175
            ],
            [
              "Gadgets",
              120,
              130,
              110,
              140
            ],
            [
              "Doodads",
              90,
              85,
              95,
              105
            ]
          ]
        }
      },
      {
        "id": "test_text_summarization",
        "description": "Test: Summarize a block of text provided in a cell.",
        "arguments": {
          "prompt": "Summarize the following text in one sentence:",
          "data": [
            [
              "The Industrial Revolution, which began in Great Britain in the late 18th century, was a period of major technological, socioeconomic, and cultural change. Key innovations included the steam engine, power loom, and advancements in iron production. This era transformed economies from agrarian and handicraft-based to industrial and machine-based, leading to urbanization and new social classes."
            ]
          ]
        },
        "expected_contains_any": [
          "Industrial Revolution",
          "Britain"
        ]
      },
      {
        "id": "test_data_analysis",
        "description": "Test: What is the average of the sales figures provided?",
        "arguments": {
          "prompt": "What is the average of the sales figures provided?",
          "data": [
            [
              "Sales"
            ],
            [
              150
            ],
            [
              200
            ],
            [
              175
            ],
            [
              225
            ],
            [
              190
            ]
          ]
        },
        "expected_contains_any": [
          "188"
        ]
      },
      {
        "id": "test_creative_writing",
        "description": "Test: Write a short paragraph about a robot discovering music for the first time.",
        "arguments": {
          "prompt": "Write a short paragraph about a robot discovering music for the first time."
        },
        "expected_contains_any_lower": [
          "robot",
          "music"
        ]
      }
    ],
    "fileId": "1"
  }
]